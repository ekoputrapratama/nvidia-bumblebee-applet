#!/usr/bin/env python2

import sys
import os
import gettext
import subprocess
import commands
import threading
import gi
gi.require_version('Gtk', '3.0')
from gi.repository import Gtk, Gdk
import signal
import time


def signal_handler(signal, frame):
    sys.exit(0)


signal.signal(signal.SIGINT, signal_handler)
# i18n
gettext.install("nvidia-bumblebee-applet", "/usr/share/locale")


class Tray:
    def __init__(self):

        self.icon = Gtk.StatusIcon()
        self.icon.set_title("nvidia-bumblebee")
        self.icon.connect("popup-menu", self.on_popup_menu)
        self.icon.connect("activate", self.on_activate)

        self.display_icon()

    def display_icon(self):
        time.sleep(1)
        status = commands.getoutput("optirun --status | grep -c off")
        if (status == "0"):
            text = commands.getoutput(
                "optirun --status | grep -oE \"[0-9] applications.*\"")
            self.icon.set_from_icon_name('nvidia-bumblebee-active')
            self.icon.set_tooltip_text(text)
        elif (status == "1"):
            text = commands.getoutput(
                "optirun --status | grep -oE \"Discrete.*\"")
            self.icon.set_from_icon_name('nvidia-bumblebee-inactive')
            self.icon.set_tooltip_text(text)
        else:
            self.icon.set_from_icon_name("dialog-error")
            self.icon.set_tooltip_text(
                _("Active graphics card: " + status))
        threading.Timer(2.0, self.display_icon).start()

    def on_activate(self, icon, data=None):
        self.run_nvidia_settings()

    def run_nvidia_settings(self, arg=None):
        subprocess.Popen(
            ["optirun", "-b", "none", "nvidia-settings", "-c", ":8"])

    def on_popup_menu(self, icon, button, time, data=None):
        menu = Gtk.Menu()

        def position_menu_cb(m, x, y=None, i=None):
            try:
                return Gtk.StatusIcon.position_menu(menu, x, y, icon)
            except (AttributeError, TypeError):
                return Gtk.StatusIcon.position_menu(menu, icon)

        item = Gtk.MenuItem(label=_("NVIDIA Settings"))
        item.connect("activate", self.run_nvidia_settings)
        menu.append(item)

        item = Gtk.MenuItem(label=_("Quit"))
        item.connect("activate", self.terminate)
        menu.append(item)

        menu.show_all()

        device = Gdk.Display.get_default().get_device_manager().get_client_pointer()
        menu.popup_for_device(device, None, None,
                              position_menu_cb, icon, button, time)

    def terminate(self, window=None, data=None):
        Gtk.main_quit()
        sys.exit(0)


class Indicator:
    def __init__(self):
        # self.running = true
        self.icon = AppIndicator.Indicator.new(
            'nvidia-bumblebee', 'nvidia-bumblebee',
            AppIndicator.IndicatorCategory.APPLICATION_STATUS)
        self.icon.set_status(AppIndicator.IndicatorStatus.ACTIVE)

        self.display_icon()

        menu = Gtk.Menu()
        item = Gtk.MenuItem(label=_("NVIDIA Settings"))
        item.connect("activate", self.run_nvidia_settings)
        menu.append(item)

        item = Gtk.MenuItem(label=_("Quit"))
        item.connect("activate", self.terminate)
        menu.append(item)

        menu.append(item)
        menu.show_all()
        self.icon.set_menu(menu)

    def display_icon(self):
        status = commands.getoutput("optirun --status | grep -c off")
        if (status == "0"):
            text = commands.getoutput(
                "optirun --status | grep -oE \"[0-9] applications.*\"")
            self.icon.set_from_icon_name('nvidia-bumblebee-active')
            self.icon.set_tooltip_text(_(text))
        elif (status == "1"):
            text = commands.getoutput(
                "optirun --status | grep -oE \"Discrete.*\"")
            self.icon.set_from_icon_name('nvidia-bumblebee-inactive')
            self.icon.set_tooltip_text(_(text))
        else:
            self.icon.set_from_icon_name("dialog-error")
            self.icon.set_tooltip_text(
                _("Active graphics card: " + status))
        threading.Timer(2.0, self.display_icon).start()

    def run_nvidia_settings(self, arg=None):
        subprocess.Popen(
            ["optirun", "-b", "none", "nvidia-settings", "-c", ":8"])

    def terminate(self, window=None, data=None):
        Gtk.main_quit()
        sys.exit(0)


if __name__ == "__main__":

    # If nvidia-bumblebee isn't installed or isn't supported, exit cleanly
    if not (os.path.exists("/usr/bin/nvidia-settings") and os.path.exists("/usr/bin/optirun")):
        sys.exit(0)

    if os.getenv("XDG_CURRENT_DESKTOP") == "KDE":
        gi.require_version('AppIndicator3', '0.1')
        from gi.repository import AppIndicator3 as AppIndicator
        Indicator()
    else:
        Tray()
    Gtk.main()
